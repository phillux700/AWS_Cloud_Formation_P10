---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    This is a master template to create a Web Application Architecture.
    Author: Philippe Traon <ptraon@pm.me>
###############################################################################################################
Parameters:

  ServerEnv:
      Description: "Server Environment name."
      ConstraintDescription: "Choose an Environment from the drop down"
      Type: "String"
      AllowedValues: 
        - "dev"
        - "staging"
        - "prod"
      Default: "dev"
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: Entre le CIDR block principal.  
  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.100.0/24
  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.101.0/24
  PrivateSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.102.0/24  
  Zone1:
    Description: Please enter the first Availability Zone
    Type: String
    Default: eu-west-1a
  Zone2:
    Description: Please enter the second Availability Zone
    Type: String
    Default: eu-west-1b
  Zone3:
    Description: Please enter the third Availability Zone
    Type: String
    Default: eu-west-1c    
  DBClass:
    Description: The database instance type
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t1.micro
      - db.m1.small
      - db.m1.medium
      - db.t2.micro
    ConstraintDescription: must select a valid database instance type.
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    Default: admin
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    Default: password
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBSize:
    Default: '5'
    Description: The size of the database (Gb)
    Type: Number
    MinValue: '5'
    MaxValue: '21'
    ConstraintDescription: must be between 5 and 21Gb.    
  TemplateURL:
      Description: "Enter an existing S3 Cloudformation Bucket."
      Type: "String"
      Default: "https://p10aws.s3-eu-west-1.amazonaws.com/infra"
       

Resources:  

  Network:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub "${TemplateURL}/network.yaml"
      Parameters:
        VpcCidrBlock: !Ref VpcCidrBlock
        ServerEnv: !Ref ServerEnv
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PrivateSubnet1CIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2CIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3CIDR: !Ref PrivateSubnet3CIDR
        Zone1: !Ref Zone1
        Zone2: !Ref Zone2
        Zone3: !Ref Zone3

  SecurityGroup:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: 
      - Network
    Properties:
      TemplateURL: !Sub "${TemplateURL}/securitygroup.yaml"
      Parameters:
        ServerEnv: !Ref ServerEnv
        VPC: !GetAtt "Network.Outputs.VPC"  

  IAM:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: 
      - Network
    Properties:
      TemplateURL: !Sub "${TemplateURL}/iam.yaml"
      Parameters:
        ServerEnv: !Ref ServerEnv

  S3:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: 
      - Network
      - IAM
    Properties:
      TemplateURL: !Sub "${TemplateURL}/s3.yaml"
      Parameters:
        ServerEnv: !Ref ServerEnv   

  RDS:
    Type: "AWS::CloudFormation::Stack"
    DependsOn: 
      - SecurityGroup
    Properties:
      TemplateURL: !Sub "${TemplateURL}/rds.yaml"
      Parameters:
        ServerEnv: !Ref ServerEnv 
        DBName: !Ref DBName
        DBSize: !Ref DBSize
        DBClass: !Ref DBClass
        Engine: MySQL
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword
        Zone1: !Ref Zone1
        Zone2: !Ref Zone2
        RDSSG: !GetAtt "SecurityGroup.Outputs.RDSSG"
        PrivateSubnets: !GetAtt "Network.Outputs.PrivateSubnets"



