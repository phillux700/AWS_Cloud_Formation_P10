---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This stack deploys:
    - VPC with private and public subnets in two Availability Zones.
    - An Internet Gateway
    - NAT Gateway

Parameters:
  ServerEnv:
    Type: String
    Description: Détermine l'environnement de déploiement.
  VpcCidrBlock:
    Type: String
    Description: Entre le CIDR block principal du VPC.
  PublicSubnet1CIDR:
    Description: IP range for the public subnet in the first Availability Zone
    Type: String
  PublicSubnet2CIDR:
    Description: IP range for the public subnet in the second Availability Zone
    Type: String
  PrivateSubnet1CIDR:
    Description: IP range for the private subnet in the first Availability Zone
    Type: String
  PrivateSubnet2CIDR:
    Description: IP range for the private subnet in the first Availability Zone
    Type: String
  PrivateSubnet3CIDR:
    Description: IP range for the private subnet in the first Availability Zone
    Type: String 
  Zone1:
    Description: Availability Zone
    Type: String
  Zone2:
    Description: second Availability Zone
    Type: String
  Zone3:
    Description: third Availability Zone
    Type: String   

Resources:    

  ################################### VPC #######################################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/fr_fr/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc.html
  # Réseau privé virtuel (section réseau isolée résidant dans une région AWS)
  ###########################
  VPC10:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-VPC10" 

  ################################### SUBNETS ###################################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet.html
  # Sous-réseau = portion d'un VPC
  # Sous-réseau public => comporte une route permettant au trafic d'être routé vers l'extérieur et depuis l'intérieur.
  # Sous-réseau privé => ne permet pas l'accès depuis l'extérieur
  ###########################
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC10
      AvailabilityZone: !Ref Zone1
      CidrBlock: !Ref PublicSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-${PublicSubnet1CIDR}-PublicSubnet1 (AZ A)"
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC10
      AvailabilityZone: !Ref Zone2
      CidrBlock: !Ref PublicSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-${PublicSubnet2CIDR}-PublicSubnet2 (AZ B)"  

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC10
      AvailabilityZone: !Ref Zone1
      CidrBlock: !Ref PrivateSubnet1CIDR
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-${PrivateSubnet1CIDR}-PrivateSubnet1 (AZ A)"       
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC10
      AvailabilityZone: !Ref Zone2
      CidrBlock: !Ref PrivateSubnet2CIDR
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-${PrivateSubnet2CIDR}-PrivateSubnet2 (AZ B)"      
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC10
      AvailabilityZone: !Ref Zone3
      CidrBlock: !Ref PrivateSubnet3CIDR
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-${PrivateSubnet3CIDR}-PrivateSubnet3 (AZ C)"  

  ########################################## INTERNET GATEWAY #########################################         

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-internetgateway.html
  # Passerelle Internet => permet de router du trafic réseau dans et hors du VPC.
  ###########################        
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-IGW"

  ######################################### VPC GATEWAY ATTACHMENT ###################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html
  # Nous devons associer notre passerelle Internet à notre VPC.
  ###########################
  AttachInternetGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC10
      InternetGatewayId: !Ref InternetGateway     

  ######################################## ROUTE TABLES #############################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route-table.html
  ###########################
  PublicRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC10
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-PublicRoute1" 
  PublicRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC10
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-PublicRoute2"

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC10
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-PrivateRoute1"
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC10
      Tags:
        - Key: Name
          Value: !Sub "${ServerEnv}-PrivateRoute2"

  ###################################### PUBLIC ROUTES ##############################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
  # On crée une route vers la passerelle de sortie.
  ###########################                 
  PublicRoute1:
    Type: AWS::EC2::Route
    Properties:
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable1
  PublicRoute2:
    Type: AWS::EC2::Route
    Properties:
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable2
      
  ###################################### SUBNETS ROUTE TABLES ASSOCIATIONS #########################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-subnet-route-table-assoc.html
  # Ici, on associe un table de routage à un sous-réseau.
  ###########################    
  AttachPublicRouteTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable1
      SubnetId: !Ref PublicSubnet1
  AttachPublicRouteTable2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable2
      SubnetId: !Ref PublicSubnet2 
      
  AttachPrivateRouteTable1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1 
  AttachPrivateRouteTable2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2 

  ################################### ELASTIC IPs #################################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-eip.html
  # Une IP élastique est un eadresse IPv4 publique accessible depuis Internet.
  ########################### 
  NatEip1:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NatEip2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  ################################## NAT GATEWAYS ################################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-natgateway.html
  # Une passerelle NAT = une adresse IP élastique !
  # NAT = Network Address Translation
  # On associe une passerelle NAT à chaque réseau public.
  # Pré-requis: un sous-réseau, une IP élastique, une passerelle internet attachée au VPC.
  ###########################     
  NatGateway1:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: VPC10-nat-a (AZ A)
  NatGateway2:
    DependsOn: AttachInternetGateway
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: VPC10-nat-b (AZ B) 
          
  ################################## PRIVATE ROUTES #############################################

  ###### DOCUMENTATION ######
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html
  ###########################                     
  NatPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
  NatPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2     


Outputs: 

  VPC: 
    Description: "A reference to the created VPC"
    Value: !Ref VPC10
    Export:
      Name: !Sub "${ServerEnv}-VPC"     

  PublicSubnets:
    Description: "A list of the public subnets"
    Value: !Join [ ",", [ !Ref "PublicSubnet1", !Ref "PublicSubnet2" ]]
    Export:
      Name: !Sub "${ServerEnv}-PublicSubnets"

  PrivateSubnets:
    Description: "A list of the private subnets"
    Value: !Join [ ",", [ !Ref "PrivateSubnet1", !Ref "PrivateSubnet2" ]]
    Export:
      Name: !Sub "${ServerEnv}-PrivateSubnets"

  PublicSubnet1:
    Description: "A reference to the public subnet in the 1st Availability Zone"
    Value: !Ref PublicSubnet1
    Export:
      Name: "PublicSubnet1"

  PublicSubnet2: 
    Description: "A reference to the public subnet in the 2nd Availability Zone"
    Value: !Ref PublicSubnet2
    Export:
      Name: "PublicSubnet2"

  PrivateSubnet1:
    Description: "A reference to the private subnet in the 1st Availability Zone"
    Value: !Ref PrivateSubnet1
    Export:
      Name: "PrivateSubnet1"

  PrivateSubnet2: 
    Description: "A reference to the private subnet in the 2nd Availability Zone"
    Value: !Ref PrivateSubnet2  
    Export:
      Name: "PrivateSubnet2"      

      

      


          
